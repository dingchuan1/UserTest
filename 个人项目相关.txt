本项目使用sa-Token来进行登录认证和鉴权等

用户认证服务单独出来成为一个微服务
当用户通过用户认证服务认证后，用户将拥有一个jwt，之后用户使用服务时都会用这个jwt来证明自己的身份。
jwt可以放在请求头header里，也可以放在url的后面http://xxxxxxxxxx?jwt=xxx (sa-Token里面为http://xxxxxxxxxx?tokenName=tokenValue)

微服务架构下的鉴权(认证)一般分为两种：
***通过登录后获取的jwt
1.每个服务各自鉴权(认证)这个jwt (是否需要每个服务都引入sa-token来鉴权，有没有更好的办法)
2.网关统一鉴权(认证) sa-token网关鉴权必须要引入redis。
test

个人理解：
	1，当物理隔离的时候（子服务部署到指定的内网环境中，只有网关对外网开放）完全可以不用引入redis，直接网关鉴权通过后，由网关在把请求分给内网的服务。
	2，之所以sa-token网关鉴权必须要引入redis，多半是因为第二种隔离方式--逻辑隔离（子服务与网关同时暴露在外网，但是子服务会有一个权限拦截层保证只接受网关发送来的请求，绕过网关直接访问子服务会被提示：无效请求）
	   https://sa-token.cc/doc.html#/micro/same-token
	   Same-Token，这时候网关鉴权通过后分发的请求都会带有Same-Token，在每个子服务加个拦截器，拦截之后验证Same-Token就可以了，而验证这个Same-Token就需要网关和子服务端一致，这个一致就需要redis来保证。
